name: ci
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_rs:
    name: Build via cargo
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

          - target: thumbv7em-none-eabihf
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v1.2.1

    - name: Configure toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target:  ${{ matrix.target }}
        override: true
        components: rustfmt, clippy

    - name: Configure caching
      uses: actions/cache@v2
      with:
        key: rt-${{ matrix.os }}-${{ matrix.target }}
        path: |
          ${{ env.HOME }}/.cargo
          target/${{ matrix.target }}

    - name: Install cross tools as re
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: |
        sudo apt install libclang-dev

    - name: Install cross toolchain (armv7)
      if: ${{ matrix.target == 'armv7-unknown-linux-gnueabihf' }}
      run: sudo apt install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

    - name: Install cross toolchain (aarch64)
      if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
      run: sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Build library (via cargo)
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: build
        args: --target ${{ matrix.target }} --release
